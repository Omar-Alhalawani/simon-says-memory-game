  Simon Says Memory Game - Enhanced Edition
  ¬© 2023‚Äì2025 Omar Alhalawani. All rights reserved.

  This software and its associated documentation files (the "Software") may be used for educational or personal purposes only.
  No part of this project may be copied, modified, or redistributed for commercial use without prior written permission.

  Created by: Omar Alhalawani
  Description: A multi-mode Simon Says handheld memory game implemented with Arduino.
               Includes Classic, Speed, Reverse, and Stealth modes with sound control,
               EEPROM-based high score saving and debounced inputs.


Simon Says Handheld Game - User Manual
¬© 2023-2025 Omar Alhalawani

====================================================
üî∑ Overview:
====================================================
This is a handheld memory game inspired by "Simon Says." The player watches a sequence of colors (and sounds) and must replicate it correctly. Each round, the sequence gets longer by one color. Try to remember and repeat as many as you can!

The game is designed with 4 colored LEDs (Yellow, Green, Red, Blue), 4 corresponding buttons, an LCD screen for instructions and feedback, and a buzzer for game tones.

====================================================
üéÆ Game Setup:
====================================================
When powered on, the game displays "Welcome to Simon!" on the LCD. Intro music plays to let you know it's working.

If you hold the **reset button (pin 8)** while powering on or pressing reset, the high score will be cleared.

====================================================
üé≤ Game Modes:
====================================================
You will be prompted to choose one of four game modes:

- **YELLOW Button = Classic Mode**:
  The standard game. Each round, a new color is added to the sequence. You watch, then you play.

- **GREEN Button = Speed Mode**:
  Same rules as Classic, but you only have 3 seconds to press each button. A countdown timer is shown.

- **RED Button = Reverse Mode**:
  The sequence is shown normally, but you must play it back **in reverse order**.

- **BLUE Button = Stealth Mode**:
  The hardest mode. The sequence is played using **sounds only**, and when it‚Äôs your turn, no sound or lights will show ‚Äî you must recall the tones by memory.

Each mode has its own unique selection sound.

====================================================
‚ù§Ô∏è Lives System:
====================================================
You start with **3 lives**. Each mistake (wrong button or timeout) costs 1 life.

After each loss, the LCD will show "Lives Left: X" and a mistake sound and flash will play.

Lose all lives, and it's Game Over.

====================================================
üèÜ High Score:
====================================================
Your longest streak is saved between games using EEPROM memory.

To **reset** the high score:
- Hold the reset button (pin 8) when powering on or pressing reset.

The high score will be shown after every game over.

====================================================
üîá Mute Feature:
====================================================
You can press and hold **the GREEN button during mode selection** to toggle mute on/off.

This is useful when others nearby are watching TV or in quiet environments.

====================================================
üîÅ Replay:
====================================================
After a game over, the game will automatically return to the mode selection screen, so you can play again without restarting your Arduino.

====================================================
üß† Tips:
====================================================
- Watch and listen carefully during the sequence.
- Practice different modes to sharpen your memory.
- Stealth mode is best played with headphones or in quiet rooms.
- Try to beat your own high score or challenge friends!

====================================================
üì¶ Hardware Requirements:
====================================================
- Arduino Uno or compatible board
- 4 LEDs (Yellow, Green, Red, Blue)
- 4 push buttons
- 1 piezo buzzer (for sound output)
- LCD with I2C module (16x2)
- Jumper wires, resistors (220Œ© for LEDs), and breadboard or custom casing

====================================================
üôå Designed & Engineered by:
====================================================
Omar Alhalawani
Carleton University - Computer Systems Engineering

====================================================
üì¨ Contact Information:
====================================================
If you have any questions, feedback, or want to collaborate on future projects, feel free to reach out!

üìß Email: omar.alhalawani2006@gmail.com
üì± Phone: 343-598-5533

Thank you for playing!
